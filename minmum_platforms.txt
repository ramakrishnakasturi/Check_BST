#include <bits/stdc++.h>
using namespace std;

void solve(int arr[], int dep[], int n)
{
	// arr,dep should not have the integer values with leading zeroes	

	int l=sizeof(arr)/sizeof(arr[0]);
	for(int i=0;i<l;i++){
		v.push_back({ arr[i], dep[i]});
	}

	// now v is vector of pairs of arrival and departure timings of train

	int ans = 0;
	int count = 0;
	vector<pair<int, char> > overlap;

	for (int i = 0; i < v.size(); i++) {

		
		overlap.push_back({ v[i].first, 'a' });

		
		overlap.push_back({ v[i].second, 'd' });
	}

	
	sort(overlap.begin(), data.end());

	for (int i = 0; i < overlap.size(); i++) {

		if (overlap[i].second == 'a')
			count++;

		if (overlap[i].second == 'd')
			count--;

		ans = max(ans, count);
	}

	
	cout << ans << endl;
}

