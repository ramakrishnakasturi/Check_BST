

class Solution{
  public:
    struct Node* reverseList(struct Node *head)
    {
        if(head->next==NULL) return head;
        Node* curr=head->next;
        Node* prev=head;
        head->next=NULL;
        while(curr!=NULL){
            Node* node=curr->next;
            curr->next=prev;
            prev=curr;
            curr=node;
            
        }
        return prev;
    }
    //Function to check whether the list is palindrome.
    bool isPalindrome(Node *head)
    {
        //Your code here
        Node* temp=head;
        Node* temp1=head;
        Node* temp2;
        int l=0;
        while(temp!=NULL){
            l++;
        }
        if(l%2==0){
            for(int i=0;i<l/2;i++){
                temp1=temp1->next;
            }
            temp2=temp1->next;
            temp1->next=NULL;
            Node* rev=reverseList(temp2);
            while(temp1!=NULL){
                if(temp1->data!=temp2->data){
                    return false;
                }
            }
            return true;
        }
        else{
            for(int i=0;i<(l/2)-1;i++){
                temp1=temp1->next;
            }
            temp2=temp1->next->next;
            temp1->next=NULL;
            Node* rev=reverseList(temp2);
            while(temp1!=NULL){
                if(temp1->data!=temp2->data){
                    return false;
                }
            }
            return true;
        }
        
    }
};


